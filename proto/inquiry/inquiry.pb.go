// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: inquiry.proto

package inquiry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Channel  string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	mi := &file_inquiry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{0}
}

func (x *Info) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Info) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type InternalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  string `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Channel   string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	ProductId string `protobuf:"bytes,3,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *InternalInfo) Reset() {
	*x = InternalInfo{}
	mi := &file_inquiry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalInfo) ProtoMessage() {}

func (x *InternalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalInfo.ProtoReflect.Descriptor instead.
func (*InternalInfo) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{1}
}

func (x *InternalInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *InternalInfo) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *InternalInfo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type Avalue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *Avalue) Reset() {
	*x = Avalue{}
	mi := &file_inquiry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Avalue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Avalue) ProtoMessage() {}

func (x *Avalue) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Avalue.ProtoReflect.Descriptor instead.
func (*Avalue) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{2}
}

func (x *Avalue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Avalue) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type AccInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BalanceType              string  `protobuf:"bytes,1,opt,name=balanceType,proto3" json:"balanceType,omitempty"`
	Amount                   *Avalue `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	FloatAmount              *Avalue `protobuf:"bytes,3,opt,name=floatAmount,proto3" json:"floatAmount,omitempty"`
	HoldAmount               *Avalue `protobuf:"bytes,4,opt,name=holdAmount,proto3" json:"holdAmount,omitempty"`
	AvailableBalance         *Avalue `protobuf:"bytes,5,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"`
	LedgerBalance            *Avalue `protobuf:"bytes,6,opt,name=ledgerBalance,proto3" json:"ledgerBalance,omitempty"`
	CurrentMultilateralLimit *Avalue `protobuf:"bytes,7,opt,name=currentMultilateralLimit,proto3" json:"currentMultilateralLimit,omitempty"`
	RegistrationStatusCode   string  `protobuf:"bytes,8,opt,name=registrationStatusCode,proto3" json:"registrationStatusCode,omitempty"`
	Status                   string  `protobuf:"bytes,9,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AccInfo) Reset() {
	*x = AccInfo{}
	mi := &file_inquiry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccInfo) ProtoMessage() {}

func (x *AccInfo) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccInfo.ProtoReflect.Descriptor instead.
func (*AccInfo) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{3}
}

func (x *AccInfo) GetBalanceType() string {
	if x != nil {
		return x.BalanceType
	}
	return ""
}

func (x *AccInfo) GetAmount() *Avalue {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *AccInfo) GetFloatAmount() *Avalue {
	if x != nil {
		return x.FloatAmount
	}
	return nil
}

func (x *AccInfo) GetHoldAmount() *Avalue {
	if x != nil {
		return x.HoldAmount
	}
	return nil
}

func (x *AccInfo) GetAvailableBalance() *Avalue {
	if x != nil {
		return x.AvailableBalance
	}
	return nil
}

func (x *AccInfo) GetLedgerBalance() *Avalue {
	if x != nil {
		return x.LedgerBalance
	}
	return nil
}

func (x *AccInfo) GetCurrentMultilateralLimit() *Avalue {
	if x != nil {
		return x.CurrentMultilateralLimit
	}
	return nil
}

func (x *AccInfo) GetRegistrationStatusCode() string {
	if x != nil {
		return x.RegistrationStatusCode
	}
	return ""
}

func (x *AccInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// The request message containing the user's name.
type BalanceInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerReferenceNo string   `protobuf:"bytes,1,opt,name=partnerReferenceNo,proto3" json:"partnerReferenceNo,omitempty"`
	BankCardToken      string   `protobuf:"bytes,2,opt,name=bankCardToken,proto3" json:"bankCardToken,omitempty"`
	AccountNo          string   `protobuf:"bytes,3,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	BalanceType        []string `protobuf:"bytes,4,rep,name=balanceType,proto3" json:"balanceType,omitempty"`
	AdditionalInfo     *Info    `protobuf:"bytes,5,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
}

func (x *BalanceInquiryRequest) Reset() {
	*x = BalanceInquiryRequest{}
	mi := &file_inquiry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceInquiryRequest) ProtoMessage() {}

func (x *BalanceInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceInquiryRequest.ProtoReflect.Descriptor instead.
func (*BalanceInquiryRequest) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{4}
}

func (x *BalanceInquiryRequest) GetPartnerReferenceNo() string {
	if x != nil {
		return x.PartnerReferenceNo
	}
	return ""
}

func (x *BalanceInquiryRequest) GetBankCardToken() string {
	if x != nil {
		return x.BankCardToken
	}
	return ""
}

func (x *BalanceInquiryRequest) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *BalanceInquiryRequest) GetBalanceType() []string {
	if x != nil {
		return x.BalanceType
	}
	return nil
}

func (x *BalanceInquiryRequest) GetAdditionalInfo() *Info {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

// The response message containing the greetings
type BalanceInquiryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode       string     `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage    string     `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ReferenceNo        string     `protobuf:"bytes,3,opt,name=referenceNo,proto3" json:"referenceNo,omitempty"`
	PartnerReferenceNo string     `protobuf:"bytes,4,opt,name=partnerReferenceNo,proto3" json:"partnerReferenceNo,omitempty"`
	AccountNo          string     `protobuf:"bytes,5,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	Name               string     `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	AccountInfo        []*AccInfo `protobuf:"bytes,7,rep,name=accountInfo,proto3" json:"accountInfo,omitempty"`
}

func (x *BalanceInquiryResponse) Reset() {
	*x = BalanceInquiryResponse{}
	mi := &file_inquiry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceInquiryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceInquiryResponse) ProtoMessage() {}

func (x *BalanceInquiryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceInquiryResponse.ProtoReflect.Descriptor instead.
func (*BalanceInquiryResponse) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{5}
}

func (x *BalanceInquiryResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *BalanceInquiryResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *BalanceInquiryResponse) GetReferenceNo() string {
	if x != nil {
		return x.ReferenceNo
	}
	return ""
}

func (x *BalanceInquiryResponse) GetPartnerReferenceNo() string {
	if x != nil {
		return x.PartnerReferenceNo
	}
	return ""
}

func (x *BalanceInquiryResponse) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *BalanceInquiryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BalanceInquiryResponse) GetAccountInfo() []*AccInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

// The request message containing the user's name.
type ExternalAccountInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryBankCode  string `protobuf:"bytes,1,opt,name=beneficiaryBankCode,proto3" json:"beneficiaryBankCode,omitempty"`
	BeneficiaryAccountNo string `protobuf:"bytes,2,opt,name=beneficiaryAccountNo,proto3" json:"beneficiaryAccountNo,omitempty"`
	PartnerReferenceNo   string `protobuf:"bytes,3,opt,name=partnerReferenceNo,proto3" json:"partnerReferenceNo,omitempty"`
	AdditionalInfo       *Info  `protobuf:"bytes,4,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
}

func (x *ExternalAccountInquiryRequest) Reset() {
	*x = ExternalAccountInquiryRequest{}
	mi := &file_inquiry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalAccountInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAccountInquiryRequest) ProtoMessage() {}

func (x *ExternalAccountInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAccountInquiryRequest.ProtoReflect.Descriptor instead.
func (*ExternalAccountInquiryRequest) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{6}
}

func (x *ExternalAccountInquiryRequest) GetBeneficiaryBankCode() string {
	if x != nil {
		return x.BeneficiaryBankCode
	}
	return ""
}

func (x *ExternalAccountInquiryRequest) GetBeneficiaryAccountNo() string {
	if x != nil {
		return x.BeneficiaryAccountNo
	}
	return ""
}

func (x *ExternalAccountInquiryRequest) GetPartnerReferenceNo() string {
	if x != nil {
		return x.PartnerReferenceNo
	}
	return ""
}

func (x *ExternalAccountInquiryRequest) GetAdditionalInfo() *Info {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

// The response message containing the greetings
type ExternalAccountInquiryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode           string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage        string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ReferenceNo            string `protobuf:"bytes,3,opt,name=referenceNo,proto3" json:"referenceNo,omitempty"`
	PartnerReferenceNo     string `protobuf:"bytes,4,opt,name=partnerReferenceNo,proto3" json:"partnerReferenceNo,omitempty"`
	BeneficiaryAccountName string `protobuf:"bytes,5,opt,name=beneficiaryAccountName,proto3" json:"beneficiaryAccountName,omitempty"`
	BeneficiaryAccountNo   string `protobuf:"bytes,6,opt,name=beneficiaryAccountNo,proto3" json:"beneficiaryAccountNo,omitempty"`
	BeneficiaryBankCode    string `protobuf:"bytes,7,opt,name=beneficiaryBankCode,proto3" json:"beneficiaryBankCode,omitempty"`
	BeneficiaryBankName    string `protobuf:"bytes,8,opt,name=beneficiaryBankName,proto3" json:"beneficiaryBankName,omitempty"`
	Currency               string `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	AdditionalInfo         *Info  `protobuf:"bytes,10,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
}

func (x *ExternalAccountInquiryResponse) Reset() {
	*x = ExternalAccountInquiryResponse{}
	mi := &file_inquiry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalAccountInquiryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAccountInquiryResponse) ProtoMessage() {}

func (x *ExternalAccountInquiryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAccountInquiryResponse.ProtoReflect.Descriptor instead.
func (*ExternalAccountInquiryResponse) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{7}
}

func (x *ExternalAccountInquiryResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetReferenceNo() string {
	if x != nil {
		return x.ReferenceNo
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetPartnerReferenceNo() string {
	if x != nil {
		return x.PartnerReferenceNo
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetBeneficiaryAccountName() string {
	if x != nil {
		return x.BeneficiaryAccountName
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetBeneficiaryAccountNo() string {
	if x != nil {
		return x.BeneficiaryAccountNo
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetBeneficiaryBankCode() string {
	if x != nil {
		return x.BeneficiaryBankCode
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetBeneficiaryBankName() string {
	if x != nil {
		return x.BeneficiaryBankName
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ExternalAccountInquiryResponse) GetAdditionalInfo() *Info {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

// The request message containing the user's name.
type InternalAccountInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerReferenceNo   string        `protobuf:"bytes,1,opt,name=partnerReferenceNo,proto3" json:"partnerReferenceNo,omitempty"`
	BeneficiaryAccountNo string        `protobuf:"bytes,2,opt,name=beneficiaryAccountNo,proto3" json:"beneficiaryAccountNo,omitempty"`
	AdditionalInfo       *InternalInfo `protobuf:"bytes,3,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
}

func (x *InternalAccountInquiryRequest) Reset() {
	*x = InternalAccountInquiryRequest{}
	mi := &file_inquiry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalAccountInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalAccountInquiryRequest) ProtoMessage() {}

func (x *InternalAccountInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalAccountInquiryRequest.ProtoReflect.Descriptor instead.
func (*InternalAccountInquiryRequest) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{8}
}

func (x *InternalAccountInquiryRequest) GetPartnerReferenceNo() string {
	if x != nil {
		return x.PartnerReferenceNo
	}
	return ""
}

func (x *InternalAccountInquiryRequest) GetBeneficiaryAccountNo() string {
	if x != nil {
		return x.BeneficiaryAccountNo
	}
	return ""
}

func (x *InternalAccountInquiryRequest) GetAdditionalInfo() *InternalInfo {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

// The response message containing the greetings
type InternalAccountInquiryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode             string        `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage          string        `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ReferenceNo              string        `protobuf:"bytes,3,opt,name=referenceNo,proto3" json:"referenceNo,omitempty"`
	PartnerReferenceNo       string        `protobuf:"bytes,4,opt,name=partnerReferenceNo,proto3" json:"partnerReferenceNo,omitempty"`
	BeneficiaryAccountName   string        `protobuf:"bytes,5,opt,name=beneficiaryAccountName,proto3" json:"beneficiaryAccountName,omitempty"`
	BeneficiaryAccountNo     string        `protobuf:"bytes,6,opt,name=beneficiaryAccountNo,proto3" json:"beneficiaryAccountNo,omitempty"`
	BeneficiaryAccountStatus string        `protobuf:"bytes,7,opt,name=beneficiaryAccountStatus,proto3" json:"beneficiaryAccountStatus,omitempty"`
	BeneficiaryAccountType   string        `protobuf:"bytes,8,opt,name=beneficiaryAccountType,proto3" json:"beneficiaryAccountType,omitempty"`
	Currency                 string        `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	AdditionalInfo           *InternalInfo `protobuf:"bytes,10,opt,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
}

func (x *InternalAccountInquiryResponse) Reset() {
	*x = InternalAccountInquiryResponse{}
	mi := &file_inquiry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalAccountInquiryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalAccountInquiryResponse) ProtoMessage() {}

func (x *InternalAccountInquiryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalAccountInquiryResponse.ProtoReflect.Descriptor instead.
func (*InternalAccountInquiryResponse) Descriptor() ([]byte, []int) {
	return file_inquiry_proto_rawDescGZIP(), []int{9}
}

func (x *InternalAccountInquiryResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetReferenceNo() string {
	if x != nil {
		return x.ReferenceNo
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetPartnerReferenceNo() string {
	if x != nil {
		return x.PartnerReferenceNo
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetBeneficiaryAccountName() string {
	if x != nil {
		return x.BeneficiaryAccountName
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetBeneficiaryAccountNo() string {
	if x != nil {
		return x.BeneficiaryAccountNo
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetBeneficiaryAccountStatus() string {
	if x != nil {
		return x.BeneficiaryAccountStatus
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetBeneficiaryAccountType() string {
	if x != nil {
		return x.BeneficiaryAccountType
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InternalAccountInquiryResponse) GetAdditionalInfo() *InternalInfo {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

var File_inquiry_proto protoreflect.FileDescriptor

var file_inquiry_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x22, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x62, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x06, 0x41, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xc9, 0x03, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x41,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x41, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x41,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3b, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x41, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x35,
	0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e,
	0x41, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x18, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x2e, 0x41, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x18, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0d,
	0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9e, 0x02, 0x0a, 0x16, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x1d, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x6f, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe3, 0x03, 0x0a, 0x1e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x12,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x16,
	0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xc2, 0x01, 0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e,
	0x6f, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x3d, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfb, 0x03, 0x0a, 0x1e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x16, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x6f, 0x12, 0x3a, 0x0a, 0x18, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x36, 0x0a, 0x16, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x3d, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x32, 0xc4, 0x02, 0x0a, 0x07, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x57,
	0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inquiry_proto_rawDescOnce sync.Once
	file_inquiry_proto_rawDescData = file_inquiry_proto_rawDesc
)

func file_inquiry_proto_rawDescGZIP() []byte {
	file_inquiry_proto_rawDescOnce.Do(func() {
		file_inquiry_proto_rawDescData = protoimpl.X.CompressGZIP(file_inquiry_proto_rawDescData)
	})
	return file_inquiry_proto_rawDescData
}

var file_inquiry_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_inquiry_proto_goTypes = []any{
	(*Info)(nil),                           // 0: inquiry.Info
	(*InternalInfo)(nil),                   // 1: inquiry.InternalInfo
	(*Avalue)(nil),                         // 2: inquiry.Avalue
	(*AccInfo)(nil),                        // 3: inquiry.AccInfo
	(*BalanceInquiryRequest)(nil),          // 4: inquiry.BalanceInquiryRequest
	(*BalanceInquiryResponse)(nil),         // 5: inquiry.BalanceInquiryResponse
	(*ExternalAccountInquiryRequest)(nil),  // 6: inquiry.ExternalAccountInquiryRequest
	(*ExternalAccountInquiryResponse)(nil), // 7: inquiry.ExternalAccountInquiryResponse
	(*InternalAccountInquiryRequest)(nil),  // 8: inquiry.InternalAccountInquiryRequest
	(*InternalAccountInquiryResponse)(nil), // 9: inquiry.InternalAccountInquiryResponse
}
var file_inquiry_proto_depIdxs = []int32{
	2,  // 0: inquiry.AccInfo.amount:type_name -> inquiry.Avalue
	2,  // 1: inquiry.AccInfo.floatAmount:type_name -> inquiry.Avalue
	2,  // 2: inquiry.AccInfo.holdAmount:type_name -> inquiry.Avalue
	2,  // 3: inquiry.AccInfo.availableBalance:type_name -> inquiry.Avalue
	2,  // 4: inquiry.AccInfo.ledgerBalance:type_name -> inquiry.Avalue
	2,  // 5: inquiry.AccInfo.currentMultilateralLimit:type_name -> inquiry.Avalue
	0,  // 6: inquiry.BalanceInquiryRequest.additionalInfo:type_name -> inquiry.Info
	3,  // 7: inquiry.BalanceInquiryResponse.accountInfo:type_name -> inquiry.AccInfo
	0,  // 8: inquiry.ExternalAccountInquiryRequest.additionalInfo:type_name -> inquiry.Info
	0,  // 9: inquiry.ExternalAccountInquiryResponse.additionalInfo:type_name -> inquiry.Info
	1,  // 10: inquiry.InternalAccountInquiryRequest.additionalInfo:type_name -> inquiry.InternalInfo
	1,  // 11: inquiry.InternalAccountInquiryResponse.additionalInfo:type_name -> inquiry.InternalInfo
	4,  // 12: inquiry.Inquiry.PostBalanceInquiry:input_type -> inquiry.BalanceInquiryRequest
	6,  // 13: inquiry.Inquiry.PostExternalAccountInquiry:input_type -> inquiry.ExternalAccountInquiryRequest
	8,  // 14: inquiry.Inquiry.PostInternalAccountInquiry:input_type -> inquiry.InternalAccountInquiryRequest
	5,  // 15: inquiry.Inquiry.PostBalanceInquiry:output_type -> inquiry.BalanceInquiryResponse
	7,  // 16: inquiry.Inquiry.PostExternalAccountInquiry:output_type -> inquiry.ExternalAccountInquiryResponse
	9,  // 17: inquiry.Inquiry.PostInternalAccountInquiry:output_type -> inquiry.InternalAccountInquiryResponse
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_inquiry_proto_init() }
func file_inquiry_proto_init() {
	if File_inquiry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inquiry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inquiry_proto_goTypes,
		DependencyIndexes: file_inquiry_proto_depIdxs,
		MessageInfos:      file_inquiry_proto_msgTypes,
	}.Build()
	File_inquiry_proto = out.File
	file_inquiry_proto_rawDesc = nil
	file_inquiry_proto_goTypes = nil
	file_inquiry_proto_depIdxs = nil
}
